CREATE OR REPLACE PROCEDURE BL_CL.PRC_LOG (
    PRC_PACKAGE_NAME   IN VARCHAR2 DEFAULT '---',
    PRC_PROCEDURE_NAME IN VARCHAR2 DEFAULT '---',
    PRC_TABLE_NAME     IN VARCHAR2 DEFAULT '---',
    PRC_CONTEXT        IN VARCHAR2 DEFAULT '---',
    PRC_ROWS_BEFORE    IN NUMBER DEFAULT NULL,
    PRC_ROWS_PROCESSED IN NUMBER DEFAULT NULL,
    PRC_ROWS_AFTER     IN NUMBER DEFAULT NULL,
    PRC_TIMESTAMP      IN DATE DEFAULT SYSDATE,
    PRC_MESSAGE        IN VARCHAR2 DEFAULT '---',
    PRC_ERROR_CODE     IN NUMBER DEFAULT NULL
) IS

    PRAGMA AUTONOMOUS_TRANSACTION;
    L_SESSION_ID   VARCHAR2(200);
    L_SESSION_USER VARCHAR2(200);
    L_DB_NAME      VARCHAR2(200);
    L_OS_USER      VARCHAR2(200);
    L_TERMINAL     VARCHAR2(200);
    L_TIMESTAMP    DATE := SYSDATE;
BEGIN
    L_SESSION_ID := DBMS_SESSION.UNIQUE_SESSION_ID;
    L_SESSION_USER := TO_CHAR(SYS_CONTEXT('USERENV', 'SESSION_USER'));
    L_DB_NAME := TO_CHAR(SYS_CONTEXT('USERENV', 'DB_NAME'));
    L_OS_USER := TO_CHAR(SYS_CONTEXT('USERENV', 'OS_USER'));
    L_TERMINAL := TO_CHAR(SYS_CONTEXT('USERENV', 'TERMINAL'));
    INSERT INTO LOG_TABLE (

        SESSION_ID,
        SESSION_USER,
        DB_NAME,
        OS_USER,
        TERMINAL,
        PACKAGE_NAME,
        PROCEDURE_NAME,
        TABLE_NAME,
        "CONTEXT",
        ROWS_BEFORE,
        ROWS_PROCESSED,
        ROWS_AFTER,
        "TIMESTAMP",
        MESSAGE,
        ERROR_CODE
    ) VALUES (

        L_SESSION_ID,
        L_SESSION_USER,
        L_DB_NAME,
        L_OS_USER,
        L_TERMINAL,
        PRC_PACKAGE_NAME,
        PRC_PROCEDURE_NAME,
        PRC_TABLE_NAME,
        PRC_CONTEXT,
        PRC_ROWS_BEFORE,
        PRC_ROWS_PROCESSED,
        PRC_ROWS_AFTER,
        L_TIMESTAMP,
        PRC_MESSAGE,
        PRC_ERROR_CODE
    );

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
END PRC_LOG;